name: trivy-and-ml

on:
  pull_request:
    branches: [ main ]

concurrency:
  group: trivy-and-ml-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: write
  pull-requests: write

jobs:
  trivy_eval_and_ml:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.11'
      # Set default scenario here (you can change per PR manually)
      SCENARIO: "04_accept_clean"  # Change manually to: 01_reject_trivy_high_risk, 02_reject_ml_high_anomaly, etc.

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Python deps (ML only)
        run: |
          if [ -f ml/requirements.txt ]; then pip install -r ml/requirements.txt; fi

      - name: Prepare dirs
        run: mkdir -p datasets/payment_set_0001 ml/data trivy_out artifacts

      # APPLY SCENARIO FIRST (before dataset generation)
      - name: Apply Test Scenario (.env + eval.csv)
        run: |
          echo "Applying scenario: $SCENARIO"
          bash scripts/apply_scenario.sh $SCENARIO

      # SHOW WHICH SCENARIO WAS APPLIED
      - name: Show applied test scenario files (env + eval.csv)
        run: |
          echo "===== CURRENT .env (used by Trivy scan) ====="
          cat datasets/payment_set_0001/.env || echo "No .env found"
          echo ""
          echo "===== First 5 lines of eval.csv (used by ML) ====="
          head -n 5 ml/data/eval.csv || echo "No eval.csv found"

      # ------------------- DATA GENERATION -------------------
      - name: Generate payment set
        run: |
          python trivy/make_payment_set_trivy.py --id 0001 --template trivy/payment_set_template
          echo "Generated -> datasets/payment_set_0001"

      - name: Show generated tree (debug)
        run: ls -R datasets/payment_set_0001

      # ------------------- TRIVY INSTALL + SCAN -------------------
      - name: Install Trivy (official script)
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          ./bin/trivy --version

      - name: Trivy filesystem scan (JSON for scoring)
        run: |
          ./bin/trivy fs --scanners secret,misconfig \
            --format json -o trivy_out/scan.json datasets/payment_set_0001 || true

      - name: Trivy filesystem scan (SARIF artifact)
        run: |
          ./bin/trivy fs --scanners secret,misconfig \
            --format sarif -o artifacts/0001_trivy.sarif datasets/payment_set_0001 || true

      # ------------------- SCORE TRIVY -------------------
      - name: Score Trivy (Precision/Recall/F1 + risk -> JSON)
        run: |
          python trivy/score_trivy.py --scan trivy_out/scan.json --out trivy_out/trivy_metrics.json
          echo "----- Trivy metrics -----"
          cat trivy_out/trivy_metrics.json

      # ------------------- ML EVALUATE -------------------
      - name: Verify Isolation Forest model exists
        run: |
          test -f ml/models/isolation_forest_model_v1.pkl || (echo "Model not found. Commit trained model."; exit 1)

      - name: ML Evaluate (Isolation Forest on eval.csv)
        run: |
          python ml/src/evaluate.py
          echo "----- ML metrics -----"
          cat ml_out/ml_metrics.json

      # ------------------- DECISION GATE -------------------
      - name: Decision Gate (compare Trivy + ML)
        run: |
          python ml/src/decision_gate.py

      # ------------------- UPLOAD ARTIFACTS -------------------
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-and-ml-artifacts
          path: |
            artifacts/**
            trivy_out/**
            ml_out/**

      - name: Upload applied scenario input files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: applied-test-scenario-inputs
          path: |
            datasets/payment_set_0001/.env
            ml/data/eval.csv

      # ------------------- SUMMARY -------------------
      - name: Post Job Summary
        if: always()
        run: |
          echo "## Trivy + ML Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "### Trivy metrics" >> $GITHUB_STEP_SUMMARY
          if [ -f trivy_out/trivy_metrics.json ]; then
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat trivy_out/trivy_metrics.json >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "_trivy_out/trivy_metrics.json not found_" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ML metrics" >> $GITHUB_STEP_SUMMARY
          if [ -f ml_out/ml_metrics.json ]; then
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat ml_out/ml_metrics.json >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "_ml_out/ml_metrics.json not found_" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Decision" >> $GITHUB_STEP_SUMMARY
          if [ -f ml_out/gate_out.json ]; then
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat ml_out/gate_out.json >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "_ml_out/gate_out.json not found_" >> $GITHUB_STEP_SUMMARY
          fi
